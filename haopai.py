import csvimport timeimport refrom selenium import webdriverfrom selenium.webdriver.common.by import Byfrom selenium.webdriver.support.ui import WebDriverWaitfrom selenium.webdriver.support import expected_conditions as ECcookies =[{    "domain": ".51cjml.com",    "hostOnly": False,    "httpOnly": False,    "name": "Hm_lpvt_18ecf8425d78b788b7eb4afc9edd2a6e",    "path": "/",    "sameSite": "unspecified",    "secure": False,    "session": True,    "storeId": "0",    "value": "1718447365",    "id": 1},{    "domain": ".51cjml.com",    "expirationDate": 1749983364,    "hostOnly": False,    "httpOnly": False,    "name": "Hm_lvt_18ecf8425d78b788b7eb4afc9edd2a6e",    "path": "/",    "sameSite": "unspecified",    "secure": False,    "session": False,    "storeId": "0",    "value": "1718019355,1718440155,1718441253",    "id": 2},{    "domain": ".haopai.51cjml.com",    "expirationDate": 1721033249.480376,    "hostOnly": False,    "httpOnly": False,    "name": "IsAutoLogin",    "path": "/",    "sameSite": "unspecified",    "secure": False,    "session": False,    "storeId": "0",    "value": "879375F46A6EE78E",    "id": 3},{    "domain": ".haopai.51cjml.com",    "expirationDate": 1721033249.480308,    "hostOnly": False,    "httpOnly": False,    "name": "YC51_Web_AutoCategory_AutoLoginUserTicket",    "path": "/",    "sameSite": "unspecified",    "secure": False,    "session": False,    "storeId": "0",    "value": "5BFE13E68325B0275670F1DDCA5143DEDB0779D79B58F0BF8CBA0B23167F78DFE203FA3B7E1E3963D55446FB8D44E2F8",    "id": 4},{    "domain": ".haopai.51cjml.com",    "hostOnly": False,    "httpOnly": False,    "name": "YC51_Web_AutoCategory_UserTicket",    "path": "/",    "sameSite": "unspecified",    "secure": False,    "session": True,    "storeId": "0",    "value": "5BFE13E68325B0275670F1DDCA5143DEDB0779D79B58F0BF8CBA0B23167F78DFE203FA3B7E1E3963D55446FB8D44E2F8",    "id": 5},{    "domain": "haopai.51cjml.com",    "expirationDate": 1718449017.154085,    "hostOnly": True,    "httpOnly": True,    "name": "acw_tc",    "path": "/",    "sameSite": "unspecified",    "secure": False,    "session": False,    "storeId": "0",    "value": "2f624a4617184472164593049e376f725c42116c49b752f9c0d233c5787335",    "id": 6},{    "domain": "haopai.51cjml.com",    "hostOnly": True,    "httpOnly": False,    "name": "YC.AutoCategory.Auto",    "path": "/",    "sameSite": "unspecified",    "secure": False,    "session": True,    "storeId": "0",    "value": "%5B%7B%22id%22%3A%222282%22%2C%22value%22%3A%22%E5%A4%A7%E4%BC%97%22%7D%2C%7B%22id%22%3A%22128%22%2C%22value%22%3A%22Polo%22%2C%22id2%22%3A%22%22%7D%2C%7B%22id%22%3A%22%22%2C%22value%22%3A%22%22%7D%2C%7B%22id%22%3A%229782%22%2C%22value%22%3A%22Cross%20Polo(6R%2F621)%22%7D%2C%7B%22id%22%3A%2260145%22%2C%22value%22%3A%221.4L%22%7D%2C%7B%22id%22%3A%22%22%2C%22value%22%3A%22%22%7D%2C0%5D",    "id": 7}]from selenium.webdriver.common.action_chains import ActionChainsdef main():    options = webdriver.ChromeOptions()    options.add_argument(        "user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 YaBrowser/24.4.0.0 Safari/537.36")    with webdriver.Chrome(options=options) as browser:        browser.get("https://haopai.51cjml.com/")        # Добавление cookies в браузер        for cookie in cookies:            # Проверка и исправление значения атрибута sameSite            if cookie.get("sameSite") == "unspecified":                cookie["sameSite"] = "Lax"  # Устанавливаем "Lax" по умолчанию            # Отладка: печать добавляемого cookie            print(f"Добавление cookie: {cookie}")            try:                browser.add_cookie(cookie)            except AssertionError as e:                print(f"Не удалось добавить cookie: {cookie}. Ошибка: {e}")        # Обновление страницы для применения cookies        browser.refresh()        time.sleep(5)        # Ожидание в течение 1000 секунд        browser.find_element(By.CLASS_NAME,"agreement").click()        time.sleep(3)        for id in range(56460,100000):            browser.get(f"https://haopai.51cjml.com/search?_getTechInstructInfoRequestObj=&ps=10&pi=1&f=&fb=&ver=v2&ak={id}&akt=0&cs=&pcs=&sts=0&cg=&ftk=&quick=&RndNum=&flag=&sn=&osn=ak%3D60145%26b%3Dcookie%26pi%3D1%26ps%3D10%26ver%3Dv2&autoParam=&mom=&resetAutoParam=false&getTechInstructInfoRequest=&getTechInstructInfoRequestObj=&gearboxId=0&qt=0&a=&p=&o=&c=&pc=&b=cookie&y=&ap=&apFilter=&v=&fm=&eng=&temv=0")            time.sleep(1)            print(f"Страница : {id}")            try:                try:                    qr = browser.find_element(By.ID, "wxContent")                    while browser.find_element(By.ID, "wxContent"):                        print("Введите QR")                        print(id)                        time.sleep(60)                except:                    ""                WebDriverWait(browser, 5).until(                    EC.element_to_be_clickable((By.CLASS_NAME, "hideAdjoinRecommend"))                )                details = browser.find_elements(By.CLASS_NAME,"hideAdjoinRecommend")                for detail in details:                    article_element = detail.find_element(By.CLASS_NAME, "productName2")                    article = article_element.text                    # Извлечение ID из href с помощью регулярного выражения                    href = article_element.get_attribute("href")                    id_detail = re.search(r'goItemInfo\((\d+)\)', href).group(1)                    if detail.find_element(By.CLASS_NAME,"productMainBox"):                        parametr = [i.text for i in browser.find_elements(By.CLASS_NAME,"be-parameterBox")]                        parametr = ''.join(parametr).replace('\n', '')                    if detail.find_element(By.CLASS_NAME,"tdRight"):                        description = detail.find_element(By.CLASS_NAME, "tdRight").text.split("\n")[0]                        enjine = detail.find_element(By.CLASS_NAME, "tdRight").text.split("\n")[1].split(",")[0]                        date = detail.find_element(By.CLASS_NAME, "tdRight").text.split("\n")[1].split(",")[1]                        enjine = enjine.replace("发动机型号:","")                        date = date.replace("时间:","")                    url = f"https://haopai.51cjml.com/factory/partitem/itemdetail?partitemid={id_detail}&usertype=1"                    # print(f"{article};{parametr};{description};{enjine};{date};{url}")                    with open('HAO-P.csv', 'a', encoding='utf-8-sig', newline='') as file:                        writer = csv.writer(file, delimiter=';')                        flatten = article, parametr, description, enjine, date, url                        writer.writerow(flatten)            except Exception as e:                print(f"у {id} нет деталей")                print(e)if __name__ == "__main__":    main()